/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesIbcSummaryStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesIbcSummaryStats{}

// ResponsesIbcSummaryStats struct for ResponsesIbcSummaryStats
type ResponsesIbcSummaryStats struct {
	BusiestChannel *ResponsesBusiestChannel `json:"busiest_channel,omitempty"`
	LargestTransfer *ResponsesIbcTransfer `json:"largest_transfer,omitempty"`
}

// NewResponsesIbcSummaryStats instantiates a new ResponsesIbcSummaryStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesIbcSummaryStats() *ResponsesIbcSummaryStats {
	this := ResponsesIbcSummaryStats{}
	return &this
}

// NewResponsesIbcSummaryStatsWithDefaults instantiates a new ResponsesIbcSummaryStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesIbcSummaryStatsWithDefaults() *ResponsesIbcSummaryStats {
	this := ResponsesIbcSummaryStats{}
	return &this
}

// GetBusiestChannel returns the BusiestChannel field value if set, zero value otherwise.
func (o *ResponsesIbcSummaryStats) GetBusiestChannel() ResponsesBusiestChannel {
	if o == nil || IsNil(o.BusiestChannel) {
		var ret ResponsesBusiestChannel
		return ret
	}
	return *o.BusiestChannel
}

// GetBusiestChannelOk returns a tuple with the BusiestChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcSummaryStats) GetBusiestChannelOk() (*ResponsesBusiestChannel, bool) {
	if o == nil || IsNil(o.BusiestChannel) {
		return nil, false
	}
	return o.BusiestChannel, true
}

// HasBusiestChannel returns a boolean if a field has been set.
func (o *ResponsesIbcSummaryStats) HasBusiestChannel() bool {
	if o != nil && !IsNil(o.BusiestChannel) {
		return true
	}

	return false
}

// SetBusiestChannel gets a reference to the given ResponsesBusiestChannel and assigns it to the BusiestChannel field.
func (o *ResponsesIbcSummaryStats) SetBusiestChannel(v ResponsesBusiestChannel) {
	o.BusiestChannel = &v
}

// GetLargestTransfer returns the LargestTransfer field value if set, zero value otherwise.
func (o *ResponsesIbcSummaryStats) GetLargestTransfer() ResponsesIbcTransfer {
	if o == nil || IsNil(o.LargestTransfer) {
		var ret ResponsesIbcTransfer
		return ret
	}
	return *o.LargestTransfer
}

// GetLargestTransferOk returns a tuple with the LargestTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcSummaryStats) GetLargestTransferOk() (*ResponsesIbcTransfer, bool) {
	if o == nil || IsNil(o.LargestTransfer) {
		return nil, false
	}
	return o.LargestTransfer, true
}

// HasLargestTransfer returns a boolean if a field has been set.
func (o *ResponsesIbcSummaryStats) HasLargestTransfer() bool {
	if o != nil && !IsNil(o.LargestTransfer) {
		return true
	}

	return false
}

// SetLargestTransfer gets a reference to the given ResponsesIbcTransfer and assigns it to the LargestTransfer field.
func (o *ResponsesIbcSummaryStats) SetLargestTransfer(v ResponsesIbcTransfer) {
	o.LargestTransfer = &v
}

func (o ResponsesIbcSummaryStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesIbcSummaryStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusiestChannel) {
		toSerialize["busiest_channel"] = o.BusiestChannel
	}
	if !IsNil(o.LargestTransfer) {
		toSerialize["largest_transfer"] = o.LargestTransfer
	}
	return toSerialize, nil
}

type NullableResponsesIbcSummaryStats struct {
	value *ResponsesIbcSummaryStats
	isSet bool
}

func (v NullableResponsesIbcSummaryStats) Get() *ResponsesIbcSummaryStats {
	return v.value
}

func (v *NullableResponsesIbcSummaryStats) Set(val *ResponsesIbcSummaryStats) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesIbcSummaryStats) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesIbcSummaryStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesIbcSummaryStats(val *ResponsesIbcSummaryStats) *NullableResponsesIbcSummaryStats {
	return &NullableResponsesIbcSummaryStats{value: val, isSet: true}
}

func (v NullableResponsesIbcSummaryStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesIbcSummaryStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


