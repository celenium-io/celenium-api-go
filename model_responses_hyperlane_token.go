/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"os"
	"time"
)

// checks if the ResponsesHyperlaneToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesHyperlaneToken{}

// ResponsesHyperlaneToken struct for ResponsesHyperlaneToken
type ResponsesHyperlaneToken struct {
	Denom *string `json:"denom,omitempty"`
	Height *int64 `json:"height,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Mailbox **os.File `json:"mailbox,omitempty"`
	Owner *ResponsesShortAddress `json:"owner,omitempty"`
	Received *string `json:"received,omitempty"`
	ReceivedTransfers *int64 `json:"received_transfers,omitempty"`
	Sent *string `json:"sent,omitempty"`
	SentTransfers *int64 `json:"sent_transfers,omitempty"`
	Time *time.Time `json:"time,omitempty"`
	TokenId **os.File `json:"token_id,omitempty"`
	TxHash **os.File `json:"tx_hash,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewResponsesHyperlaneToken instantiates a new ResponsesHyperlaneToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesHyperlaneToken() *ResponsesHyperlaneToken {
	this := ResponsesHyperlaneToken{}
	return &this
}

// NewResponsesHyperlaneTokenWithDefaults instantiates a new ResponsesHyperlaneToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesHyperlaneTokenWithDefaults() *ResponsesHyperlaneToken {
	this := ResponsesHyperlaneToken{}
	return &this
}

// GetDenom returns the Denom field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetDenom() string {
	if o == nil || IsNil(o.Denom) {
		var ret string
		return ret
	}
	return *o.Denom
}

// GetDenomOk returns a tuple with the Denom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetDenomOk() (*string, bool) {
	if o == nil || IsNil(o.Denom) {
		return nil, false
	}
	return o.Denom, true
}

// HasDenom returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasDenom() bool {
	if o != nil && !IsNil(o.Denom) {
		return true
	}

	return false
}

// SetDenom gets a reference to the given string and assigns it to the Denom field.
func (o *ResponsesHyperlaneToken) SetDenom(v string) {
	o.Denom = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetHeight() int64 {
	if o == nil || IsNil(o.Height) {
		var ret int64
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetHeightOk() (*int64, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int64 and assigns it to the Height field.
func (o *ResponsesHyperlaneToken) SetHeight(v int64) {
	o.Height = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ResponsesHyperlaneToken) SetId(v int64) {
	o.Id = &v
}

// GetMailbox returns the Mailbox field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetMailbox() *os.File {
	if o == nil || IsNil(o.Mailbox) {
		var ret *os.File
		return ret
	}
	return *o.Mailbox
}

// GetMailboxOk returns a tuple with the Mailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetMailboxOk() (**os.File, bool) {
	if o == nil || IsNil(o.Mailbox) {
		return nil, false
	}
	return o.Mailbox, true
}

// HasMailbox returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasMailbox() bool {
	if o != nil && !IsNil(o.Mailbox) {
		return true
	}

	return false
}

// SetMailbox gets a reference to the given *os.File and assigns it to the Mailbox field.
func (o *ResponsesHyperlaneToken) SetMailbox(v *os.File) {
	o.Mailbox = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetOwner() ResponsesShortAddress {
	if o == nil || IsNil(o.Owner) {
		var ret ResponsesShortAddress
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetOwnerOk() (*ResponsesShortAddress, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given ResponsesShortAddress and assigns it to the Owner field.
func (o *ResponsesHyperlaneToken) SetOwner(v ResponsesShortAddress) {
	o.Owner = &v
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetReceived() string {
	if o == nil || IsNil(o.Received) {
		var ret string
		return ret
	}
	return *o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetReceivedOk() (*string, bool) {
	if o == nil || IsNil(o.Received) {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasReceived() bool {
	if o != nil && !IsNil(o.Received) {
		return true
	}

	return false
}

// SetReceived gets a reference to the given string and assigns it to the Received field.
func (o *ResponsesHyperlaneToken) SetReceived(v string) {
	o.Received = &v
}

// GetReceivedTransfers returns the ReceivedTransfers field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetReceivedTransfers() int64 {
	if o == nil || IsNil(o.ReceivedTransfers) {
		var ret int64
		return ret
	}
	return *o.ReceivedTransfers
}

// GetReceivedTransfersOk returns a tuple with the ReceivedTransfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetReceivedTransfersOk() (*int64, bool) {
	if o == nil || IsNil(o.ReceivedTransfers) {
		return nil, false
	}
	return o.ReceivedTransfers, true
}

// HasReceivedTransfers returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasReceivedTransfers() bool {
	if o != nil && !IsNil(o.ReceivedTransfers) {
		return true
	}

	return false
}

// SetReceivedTransfers gets a reference to the given int64 and assigns it to the ReceivedTransfers field.
func (o *ResponsesHyperlaneToken) SetReceivedTransfers(v int64) {
	o.ReceivedTransfers = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetSent() string {
	if o == nil || IsNil(o.Sent) {
		var ret string
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetSentOk() (*string, bool) {
	if o == nil || IsNil(o.Sent) {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasSent() bool {
	if o != nil && !IsNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given string and assigns it to the Sent field.
func (o *ResponsesHyperlaneToken) SetSent(v string) {
	o.Sent = &v
}

// GetSentTransfers returns the SentTransfers field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetSentTransfers() int64 {
	if o == nil || IsNil(o.SentTransfers) {
		var ret int64
		return ret
	}
	return *o.SentTransfers
}

// GetSentTransfersOk returns a tuple with the SentTransfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetSentTransfersOk() (*int64, bool) {
	if o == nil || IsNil(o.SentTransfers) {
		return nil, false
	}
	return o.SentTransfers, true
}

// HasSentTransfers returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasSentTransfers() bool {
	if o != nil && !IsNil(o.SentTransfers) {
		return true
	}

	return false
}

// SetSentTransfers gets a reference to the given int64 and assigns it to the SentTransfers field.
func (o *ResponsesHyperlaneToken) SetSentTransfers(v int64) {
	o.SentTransfers = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *ResponsesHyperlaneToken) SetTime(v time.Time) {
	o.Time = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetTokenId() *os.File {
	if o == nil || IsNil(o.TokenId) {
		var ret *os.File
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetTokenIdOk() (**os.File, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given *os.File and assigns it to the TokenId field.
func (o *ResponsesHyperlaneToken) SetTokenId(v *os.File) {
	o.TokenId = &v
}

// GetTxHash returns the TxHash field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetTxHash() *os.File {
	if o == nil || IsNil(o.TxHash) {
		var ret *os.File
		return ret
	}
	return *o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetTxHashOk() (**os.File, bool) {
	if o == nil || IsNil(o.TxHash) {
		return nil, false
	}
	return o.TxHash, true
}

// HasTxHash returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasTxHash() bool {
	if o != nil && !IsNil(o.TxHash) {
		return true
	}

	return false
}

// SetTxHash gets a reference to the given *os.File and assigns it to the TxHash field.
func (o *ResponsesHyperlaneToken) SetTxHash(v *os.File) {
	o.TxHash = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponsesHyperlaneToken) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneToken) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponsesHyperlaneToken) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ResponsesHyperlaneToken) SetType(v string) {
	o.Type = &v
}

func (o ResponsesHyperlaneToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesHyperlaneToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Denom) {
		toSerialize["denom"] = o.Denom
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Mailbox) {
		toSerialize["mailbox"] = o.Mailbox
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Received) {
		toSerialize["received"] = o.Received
	}
	if !IsNil(o.ReceivedTransfers) {
		toSerialize["received_transfers"] = o.ReceivedTransfers
	}
	if !IsNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !IsNil(o.SentTransfers) {
		toSerialize["sent_transfers"] = o.SentTransfers
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.TokenId) {
		toSerialize["token_id"] = o.TokenId
	}
	if !IsNil(o.TxHash) {
		toSerialize["tx_hash"] = o.TxHash
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableResponsesHyperlaneToken struct {
	value *ResponsesHyperlaneToken
	isSet bool
}

func (v NullableResponsesHyperlaneToken) Get() *ResponsesHyperlaneToken {
	return v.value
}

func (v *NullableResponsesHyperlaneToken) Set(val *ResponsesHyperlaneToken) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesHyperlaneToken) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesHyperlaneToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesHyperlaneToken(val *ResponsesHyperlaneToken) *NullableResponsesHyperlaneToken {
	return &NullableResponsesHyperlaneToken{value: val, isSet: true}
}

func (v NullableResponsesHyperlaneToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesHyperlaneToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


