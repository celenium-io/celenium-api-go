/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesHyperlaneCounterparty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesHyperlaneCounterparty{}

// ResponsesHyperlaneCounterparty struct for ResponsesHyperlaneCounterparty
type ResponsesHyperlaneCounterparty struct {
	Domain *int64 `json:"domain,omitempty"`
	Hash *string `json:"hash,omitempty"`
}

// NewResponsesHyperlaneCounterparty instantiates a new ResponsesHyperlaneCounterparty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesHyperlaneCounterparty() *ResponsesHyperlaneCounterparty {
	this := ResponsesHyperlaneCounterparty{}
	return &this
}

// NewResponsesHyperlaneCounterpartyWithDefaults instantiates a new ResponsesHyperlaneCounterparty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesHyperlaneCounterpartyWithDefaults() *ResponsesHyperlaneCounterparty {
	this := ResponsesHyperlaneCounterparty{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ResponsesHyperlaneCounterparty) GetDomain() int64 {
	if o == nil || IsNil(o.Domain) {
		var ret int64
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneCounterparty) GetDomainOk() (*int64, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ResponsesHyperlaneCounterparty) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given int64 and assigns it to the Domain field.
func (o *ResponsesHyperlaneCounterparty) SetDomain(v int64) {
	o.Domain = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ResponsesHyperlaneCounterparty) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneCounterparty) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ResponsesHyperlaneCounterparty) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ResponsesHyperlaneCounterparty) SetHash(v string) {
	o.Hash = &v
}

func (o ResponsesHyperlaneCounterparty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesHyperlaneCounterparty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	return toSerialize, nil
}

type NullableResponsesHyperlaneCounterparty struct {
	value *ResponsesHyperlaneCounterparty
	isSet bool
}

func (v NullableResponsesHyperlaneCounterparty) Get() *ResponsesHyperlaneCounterparty {
	return v.value
}

func (v *NullableResponsesHyperlaneCounterparty) Set(val *ResponsesHyperlaneCounterparty) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesHyperlaneCounterparty) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesHyperlaneCounterparty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesHyperlaneCounterparty(val *ResponsesHyperlaneCounterparty) *NullableResponsesHyperlaneCounterparty {
	return &NullableResponsesHyperlaneCounterparty{value: val, isSet: true}
}

func (v NullableResponsesHyperlaneCounterparty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesHyperlaneCounterparty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


