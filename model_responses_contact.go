/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesContact{}

// ResponsesContact struct for ResponsesContact
type ResponsesContact struct {
	Discord *string `json:"discord,omitempty"`
	Github *string `json:"github,omitempty"`
	Medium *string `json:"medium,omitempty"`
	Telegram *string `json:"telegram,omitempty"`
	Twitter *string `json:"twitter,omitempty"`
	Website *string `json:"website,omitempty"`
}

// NewResponsesContact instantiates a new ResponsesContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesContact() *ResponsesContact {
	this := ResponsesContact{}
	return &this
}

// NewResponsesContactWithDefaults instantiates a new ResponsesContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesContactWithDefaults() *ResponsesContact {
	this := ResponsesContact{}
	return &this
}

// GetDiscord returns the Discord field value if set, zero value otherwise.
func (o *ResponsesContact) GetDiscord() string {
	if o == nil || IsNil(o.Discord) {
		var ret string
		return ret
	}
	return *o.Discord
}

// GetDiscordOk returns a tuple with the Discord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesContact) GetDiscordOk() (*string, bool) {
	if o == nil || IsNil(o.Discord) {
		return nil, false
	}
	return o.Discord, true
}

// HasDiscord returns a boolean if a field has been set.
func (o *ResponsesContact) HasDiscord() bool {
	if o != nil && !IsNil(o.Discord) {
		return true
	}

	return false
}

// SetDiscord gets a reference to the given string and assigns it to the Discord field.
func (o *ResponsesContact) SetDiscord(v string) {
	o.Discord = &v
}

// GetGithub returns the Github field value if set, zero value otherwise.
func (o *ResponsesContact) GetGithub() string {
	if o == nil || IsNil(o.Github) {
		var ret string
		return ret
	}
	return *o.Github
}

// GetGithubOk returns a tuple with the Github field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesContact) GetGithubOk() (*string, bool) {
	if o == nil || IsNil(o.Github) {
		return nil, false
	}
	return o.Github, true
}

// HasGithub returns a boolean if a field has been set.
func (o *ResponsesContact) HasGithub() bool {
	if o != nil && !IsNil(o.Github) {
		return true
	}

	return false
}

// SetGithub gets a reference to the given string and assigns it to the Github field.
func (o *ResponsesContact) SetGithub(v string) {
	o.Github = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *ResponsesContact) GetMedium() string {
	if o == nil || IsNil(o.Medium) {
		var ret string
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesContact) GetMediumOk() (*string, bool) {
	if o == nil || IsNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *ResponsesContact) HasMedium() bool {
	if o != nil && !IsNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given string and assigns it to the Medium field.
func (o *ResponsesContact) SetMedium(v string) {
	o.Medium = &v
}

// GetTelegram returns the Telegram field value if set, zero value otherwise.
func (o *ResponsesContact) GetTelegram() string {
	if o == nil || IsNil(o.Telegram) {
		var ret string
		return ret
	}
	return *o.Telegram
}

// GetTelegramOk returns a tuple with the Telegram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesContact) GetTelegramOk() (*string, bool) {
	if o == nil || IsNil(o.Telegram) {
		return nil, false
	}
	return o.Telegram, true
}

// HasTelegram returns a boolean if a field has been set.
func (o *ResponsesContact) HasTelegram() bool {
	if o != nil && !IsNil(o.Telegram) {
		return true
	}

	return false
}

// SetTelegram gets a reference to the given string and assigns it to the Telegram field.
func (o *ResponsesContact) SetTelegram(v string) {
	o.Telegram = &v
}

// GetTwitter returns the Twitter field value if set, zero value otherwise.
func (o *ResponsesContact) GetTwitter() string {
	if o == nil || IsNil(o.Twitter) {
		var ret string
		return ret
	}
	return *o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesContact) GetTwitterOk() (*string, bool) {
	if o == nil || IsNil(o.Twitter) {
		return nil, false
	}
	return o.Twitter, true
}

// HasTwitter returns a boolean if a field has been set.
func (o *ResponsesContact) HasTwitter() bool {
	if o != nil && !IsNil(o.Twitter) {
		return true
	}

	return false
}

// SetTwitter gets a reference to the given string and assigns it to the Twitter field.
func (o *ResponsesContact) SetTwitter(v string) {
	o.Twitter = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *ResponsesContact) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesContact) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *ResponsesContact) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *ResponsesContact) SetWebsite(v string) {
	o.Website = &v
}

func (o ResponsesContact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discord) {
		toSerialize["discord"] = o.Discord
	}
	if !IsNil(o.Github) {
		toSerialize["github"] = o.Github
	}
	if !IsNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !IsNil(o.Telegram) {
		toSerialize["telegram"] = o.Telegram
	}
	if !IsNil(o.Twitter) {
		toSerialize["twitter"] = o.Twitter
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

type NullableResponsesContact struct {
	value *ResponsesContact
	isSet bool
}

func (v NullableResponsesContact) Get() *ResponsesContact {
	return v.value
}

func (v *NullableResponsesContact) Set(val *ResponsesContact) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesContact) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesContact(val *ResponsesContact) *NullableResponsesContact {
	return &NullableResponsesContact{value: val, isSet: true}
}

func (v NullableResponsesContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


