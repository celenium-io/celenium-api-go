/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesBusiestChannel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesBusiestChannel{}

// ResponsesBusiestChannel struct for ResponsesBusiestChannel
type ResponsesBusiestChannel struct {
	ChainId *string `json:"chain_id,omitempty"`
	ChannelId *string `json:"channel_id,omitempty"`
	TransfersCount *int32 `json:"transfers_count,omitempty"`
}

// NewResponsesBusiestChannel instantiates a new ResponsesBusiestChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesBusiestChannel() *ResponsesBusiestChannel {
	this := ResponsesBusiestChannel{}
	return &this
}

// NewResponsesBusiestChannelWithDefaults instantiates a new ResponsesBusiestChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesBusiestChannelWithDefaults() *ResponsesBusiestChannel {
	this := ResponsesBusiestChannel{}
	return &this
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *ResponsesBusiestChannel) GetChainId() string {
	if o == nil || IsNil(o.ChainId) {
		var ret string
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesBusiestChannel) GetChainIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *ResponsesBusiestChannel) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given string and assigns it to the ChainId field.
func (o *ResponsesBusiestChannel) SetChainId(v string) {
	o.ChainId = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *ResponsesBusiestChannel) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesBusiestChannel) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *ResponsesBusiestChannel) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *ResponsesBusiestChannel) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetTransfersCount returns the TransfersCount field value if set, zero value otherwise.
func (o *ResponsesBusiestChannel) GetTransfersCount() int32 {
	if o == nil || IsNil(o.TransfersCount) {
		var ret int32
		return ret
	}
	return *o.TransfersCount
}

// GetTransfersCountOk returns a tuple with the TransfersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesBusiestChannel) GetTransfersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TransfersCount) {
		return nil, false
	}
	return o.TransfersCount, true
}

// HasTransfersCount returns a boolean if a field has been set.
func (o *ResponsesBusiestChannel) HasTransfersCount() bool {
	if o != nil && !IsNil(o.TransfersCount) {
		return true
	}

	return false
}

// SetTransfersCount gets a reference to the given int32 and assigns it to the TransfersCount field.
func (o *ResponsesBusiestChannel) SetTransfersCount(v int32) {
	o.TransfersCount = &v
}

func (o ResponsesBusiestChannel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesBusiestChannel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	if !IsNil(o.ChannelId) {
		toSerialize["channel_id"] = o.ChannelId
	}
	if !IsNil(o.TransfersCount) {
		toSerialize["transfers_count"] = o.TransfersCount
	}
	return toSerialize, nil
}

type NullableResponsesBusiestChannel struct {
	value *ResponsesBusiestChannel
	isSet bool
}

func (v NullableResponsesBusiestChannel) Get() *ResponsesBusiestChannel {
	return v.value
}

func (v *NullableResponsesBusiestChannel) Set(val *ResponsesBusiestChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesBusiestChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesBusiestChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesBusiestChannel(val *ResponsesBusiestChannel) *NullableResponsesBusiestChannel {
	return &NullableResponsesBusiestChannel{value: val, isSet: true}
}

func (v NullableResponsesBusiestChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesBusiestChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


