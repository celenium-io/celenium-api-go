/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"time"
	"os"
)

// checks if the ResponsesIbcConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesIbcConnection{}

// ResponsesIbcConnection struct for ResponsesIbcConnection
type ResponsesIbcConnection struct {
	ChannelsCount *int32 `json:"channels_count,omitempty"`
	Client *ResponsesShortIbcClient `json:"client,omitempty"`
	ConnectedAt *time.Time `json:"connected_at,omitempty"`
	ConnectedHeight *int32 `json:"connected_height,omitempty"`
	ConnectedTxHash **os.File `json:"connected_tx_hash,omitempty"`
	CounterpartyClientId *string `json:"counterparty_client_id,omitempty"`
	CounterpartyConnectionId *string `json:"counterparty_connection_id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	CreatedTxHash **os.File `json:"created_tx_hash,omitempty"`
	Height *int32 `json:"height,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewResponsesIbcConnection instantiates a new ResponsesIbcConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesIbcConnection() *ResponsesIbcConnection {
	this := ResponsesIbcConnection{}
	return &this
}

// NewResponsesIbcConnectionWithDefaults instantiates a new ResponsesIbcConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesIbcConnectionWithDefaults() *ResponsesIbcConnection {
	this := ResponsesIbcConnection{}
	return &this
}

// GetChannelsCount returns the ChannelsCount field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetChannelsCount() int32 {
	if o == nil || IsNil(o.ChannelsCount) {
		var ret int32
		return ret
	}
	return *o.ChannelsCount
}

// GetChannelsCountOk returns a tuple with the ChannelsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetChannelsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelsCount) {
		return nil, false
	}
	return o.ChannelsCount, true
}

// HasChannelsCount returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasChannelsCount() bool {
	if o != nil && !IsNil(o.ChannelsCount) {
		return true
	}

	return false
}

// SetChannelsCount gets a reference to the given int32 and assigns it to the ChannelsCount field.
func (o *ResponsesIbcConnection) SetChannelsCount(v int32) {
	o.ChannelsCount = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetClient() ResponsesShortIbcClient {
	if o == nil || IsNil(o.Client) {
		var ret ResponsesShortIbcClient
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetClientOk() (*ResponsesShortIbcClient, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given ResponsesShortIbcClient and assigns it to the Client field.
func (o *ResponsesIbcConnection) SetClient(v ResponsesShortIbcClient) {
	o.Client = &v
}

// GetConnectedAt returns the ConnectedAt field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetConnectedAt() time.Time {
	if o == nil || IsNil(o.ConnectedAt) {
		var ret time.Time
		return ret
	}
	return *o.ConnectedAt
}

// GetConnectedAtOk returns a tuple with the ConnectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetConnectedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ConnectedAt) {
		return nil, false
	}
	return o.ConnectedAt, true
}

// HasConnectedAt returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasConnectedAt() bool {
	if o != nil && !IsNil(o.ConnectedAt) {
		return true
	}

	return false
}

// SetConnectedAt gets a reference to the given time.Time and assigns it to the ConnectedAt field.
func (o *ResponsesIbcConnection) SetConnectedAt(v time.Time) {
	o.ConnectedAt = &v
}

// GetConnectedHeight returns the ConnectedHeight field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetConnectedHeight() int32 {
	if o == nil || IsNil(o.ConnectedHeight) {
		var ret int32
		return ret
	}
	return *o.ConnectedHeight
}

// GetConnectedHeightOk returns a tuple with the ConnectedHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetConnectedHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectedHeight) {
		return nil, false
	}
	return o.ConnectedHeight, true
}

// HasConnectedHeight returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasConnectedHeight() bool {
	if o != nil && !IsNil(o.ConnectedHeight) {
		return true
	}

	return false
}

// SetConnectedHeight gets a reference to the given int32 and assigns it to the ConnectedHeight field.
func (o *ResponsesIbcConnection) SetConnectedHeight(v int32) {
	o.ConnectedHeight = &v
}

// GetConnectedTxHash returns the ConnectedTxHash field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetConnectedTxHash() *os.File {
	if o == nil || IsNil(o.ConnectedTxHash) {
		var ret *os.File
		return ret
	}
	return *o.ConnectedTxHash
}

// GetConnectedTxHashOk returns a tuple with the ConnectedTxHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetConnectedTxHashOk() (**os.File, bool) {
	if o == nil || IsNil(o.ConnectedTxHash) {
		return nil, false
	}
	return o.ConnectedTxHash, true
}

// HasConnectedTxHash returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasConnectedTxHash() bool {
	if o != nil && !IsNil(o.ConnectedTxHash) {
		return true
	}

	return false
}

// SetConnectedTxHash gets a reference to the given *os.File and assigns it to the ConnectedTxHash field.
func (o *ResponsesIbcConnection) SetConnectedTxHash(v *os.File) {
	o.ConnectedTxHash = &v
}

// GetCounterpartyClientId returns the CounterpartyClientId field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetCounterpartyClientId() string {
	if o == nil || IsNil(o.CounterpartyClientId) {
		var ret string
		return ret
	}
	return *o.CounterpartyClientId
}

// GetCounterpartyClientIdOk returns a tuple with the CounterpartyClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetCounterpartyClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.CounterpartyClientId) {
		return nil, false
	}
	return o.CounterpartyClientId, true
}

// HasCounterpartyClientId returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasCounterpartyClientId() bool {
	if o != nil && !IsNil(o.CounterpartyClientId) {
		return true
	}

	return false
}

// SetCounterpartyClientId gets a reference to the given string and assigns it to the CounterpartyClientId field.
func (o *ResponsesIbcConnection) SetCounterpartyClientId(v string) {
	o.CounterpartyClientId = &v
}

// GetCounterpartyConnectionId returns the CounterpartyConnectionId field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetCounterpartyConnectionId() string {
	if o == nil || IsNil(o.CounterpartyConnectionId) {
		var ret string
		return ret
	}
	return *o.CounterpartyConnectionId
}

// GetCounterpartyConnectionIdOk returns a tuple with the CounterpartyConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetCounterpartyConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CounterpartyConnectionId) {
		return nil, false
	}
	return o.CounterpartyConnectionId, true
}

// HasCounterpartyConnectionId returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasCounterpartyConnectionId() bool {
	if o != nil && !IsNil(o.CounterpartyConnectionId) {
		return true
	}

	return false
}

// SetCounterpartyConnectionId gets a reference to the given string and assigns it to the CounterpartyConnectionId field.
func (o *ResponsesIbcConnection) SetCounterpartyConnectionId(v string) {
	o.CounterpartyConnectionId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ResponsesIbcConnection) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedTxHash returns the CreatedTxHash field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetCreatedTxHash() *os.File {
	if o == nil || IsNil(o.CreatedTxHash) {
		var ret *os.File
		return ret
	}
	return *o.CreatedTxHash
}

// GetCreatedTxHashOk returns a tuple with the CreatedTxHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetCreatedTxHashOk() (**os.File, bool) {
	if o == nil || IsNil(o.CreatedTxHash) {
		return nil, false
	}
	return o.CreatedTxHash, true
}

// HasCreatedTxHash returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasCreatedTxHash() bool {
	if o != nil && !IsNil(o.CreatedTxHash) {
		return true
	}

	return false
}

// SetCreatedTxHash gets a reference to the given *os.File and assigns it to the CreatedTxHash field.
func (o *ResponsesIbcConnection) SetCreatedTxHash(v *os.File) {
	o.CreatedTxHash = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ResponsesIbcConnection) SetHeight(v int32) {
	o.Height = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesIbcConnection) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcConnection) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesIbcConnection) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResponsesIbcConnection) SetId(v string) {
	o.Id = &v
}

func (o ResponsesIbcConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesIbcConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelsCount) {
		toSerialize["channels_count"] = o.ChannelsCount
	}
	if !IsNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !IsNil(o.ConnectedAt) {
		toSerialize["connected_at"] = o.ConnectedAt
	}
	if !IsNil(o.ConnectedHeight) {
		toSerialize["connected_height"] = o.ConnectedHeight
	}
	if !IsNil(o.ConnectedTxHash) {
		toSerialize["connected_tx_hash"] = o.ConnectedTxHash
	}
	if !IsNil(o.CounterpartyClientId) {
		toSerialize["counterparty_client_id"] = o.CounterpartyClientId
	}
	if !IsNil(o.CounterpartyConnectionId) {
		toSerialize["counterparty_connection_id"] = o.CounterpartyConnectionId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedTxHash) {
		toSerialize["created_tx_hash"] = o.CreatedTxHash
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableResponsesIbcConnection struct {
	value *ResponsesIbcConnection
	isSet bool
}

func (v NullableResponsesIbcConnection) Get() *ResponsesIbcConnection {
	return v.value
}

func (v *NullableResponsesIbcConnection) Set(val *ResponsesIbcConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesIbcConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesIbcConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesIbcConnection(val *ResponsesIbcConnection) *NullableResponsesIbcConnection {
	return &NullableResponsesIbcConnection{value: val, isSet: true}
}

func (v NullableResponsesIbcConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesIbcConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


