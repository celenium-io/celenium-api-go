/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesDomainMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesDomainMetadata{}

// ResponsesDomainMetadata struct for ResponsesDomainMetadata
type ResponsesDomainMetadata struct {
	BlockExplorers []ResponsesBlockExplorer `json:"block_explorers,omitempty"`
	Domain *int32 `json:"domain,omitempty"`
	Name *string `json:"name,omitempty"`
	NativeToken *ResponsesNativeToken `json:"native_token,omitempty"`
}

// NewResponsesDomainMetadata instantiates a new ResponsesDomainMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesDomainMetadata() *ResponsesDomainMetadata {
	this := ResponsesDomainMetadata{}
	return &this
}

// NewResponsesDomainMetadataWithDefaults instantiates a new ResponsesDomainMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesDomainMetadataWithDefaults() *ResponsesDomainMetadata {
	this := ResponsesDomainMetadata{}
	return &this
}

// GetBlockExplorers returns the BlockExplorers field value if set, zero value otherwise.
func (o *ResponsesDomainMetadata) GetBlockExplorers() []ResponsesBlockExplorer {
	if o == nil || IsNil(o.BlockExplorers) {
		var ret []ResponsesBlockExplorer
		return ret
	}
	return o.BlockExplorers
}

// GetBlockExplorersOk returns a tuple with the BlockExplorers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesDomainMetadata) GetBlockExplorersOk() ([]ResponsesBlockExplorer, bool) {
	if o == nil || IsNil(o.BlockExplorers) {
		return nil, false
	}
	return o.BlockExplorers, true
}

// HasBlockExplorers returns a boolean if a field has been set.
func (o *ResponsesDomainMetadata) HasBlockExplorers() bool {
	if o != nil && !IsNil(o.BlockExplorers) {
		return true
	}

	return false
}

// SetBlockExplorers gets a reference to the given []ResponsesBlockExplorer and assigns it to the BlockExplorers field.
func (o *ResponsesDomainMetadata) SetBlockExplorers(v []ResponsesBlockExplorer) {
	o.BlockExplorers = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ResponsesDomainMetadata) GetDomain() int32 {
	if o == nil || IsNil(o.Domain) {
		var ret int32
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesDomainMetadata) GetDomainOk() (*int32, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ResponsesDomainMetadata) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given int32 and assigns it to the Domain field.
func (o *ResponsesDomainMetadata) SetDomain(v int32) {
	o.Domain = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponsesDomainMetadata) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesDomainMetadata) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponsesDomainMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResponsesDomainMetadata) SetName(v string) {
	o.Name = &v
}

// GetNativeToken returns the NativeToken field value if set, zero value otherwise.
func (o *ResponsesDomainMetadata) GetNativeToken() ResponsesNativeToken {
	if o == nil || IsNil(o.NativeToken) {
		var ret ResponsesNativeToken
		return ret
	}
	return *o.NativeToken
}

// GetNativeTokenOk returns a tuple with the NativeToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesDomainMetadata) GetNativeTokenOk() (*ResponsesNativeToken, bool) {
	if o == nil || IsNil(o.NativeToken) {
		return nil, false
	}
	return o.NativeToken, true
}

// HasNativeToken returns a boolean if a field has been set.
func (o *ResponsesDomainMetadata) HasNativeToken() bool {
	if o != nil && !IsNil(o.NativeToken) {
		return true
	}

	return false
}

// SetNativeToken gets a reference to the given ResponsesNativeToken and assigns it to the NativeToken field.
func (o *ResponsesDomainMetadata) SetNativeToken(v ResponsesNativeToken) {
	o.NativeToken = &v
}

func (o ResponsesDomainMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesDomainMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockExplorers) {
		toSerialize["block_explorers"] = o.BlockExplorers
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NativeToken) {
		toSerialize["native_token"] = o.NativeToken
	}
	return toSerialize, nil
}

type NullableResponsesDomainMetadata struct {
	value *ResponsesDomainMetadata
	isSet bool
}

func (v NullableResponsesDomainMetadata) Get() *ResponsesDomainMetadata {
	return v.value
}

func (v *NullableResponsesDomainMetadata) Set(val *ResponsesDomainMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesDomainMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesDomainMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesDomainMetadata(val *ResponsesDomainMetadata) *NullableResponsesDomainMetadata {
	return &NullableResponsesDomainMetadata{value: val, isSet: true}
}

func (v NullableResponsesDomainMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesDomainMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


