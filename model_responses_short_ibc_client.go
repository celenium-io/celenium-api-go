/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"os"
)

// checks if the ResponsesShortIbcClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesShortIbcClient{}

// ResponsesShortIbcClient struct for ResponsesShortIbcClient
type ResponsesShortIbcClient struct {
	ChainId **os.File `json:"chain_id,omitempty"`
	Id *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewResponsesShortIbcClient instantiates a new ResponsesShortIbcClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesShortIbcClient() *ResponsesShortIbcClient {
	this := ResponsesShortIbcClient{}
	return &this
}

// NewResponsesShortIbcClientWithDefaults instantiates a new ResponsesShortIbcClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesShortIbcClientWithDefaults() *ResponsesShortIbcClient {
	this := ResponsesShortIbcClient{}
	return &this
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *ResponsesShortIbcClient) GetChainId() *os.File {
	if o == nil || IsNil(o.ChainId) {
		var ret *os.File
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesShortIbcClient) GetChainIdOk() (**os.File, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *ResponsesShortIbcClient) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given *os.File and assigns it to the ChainId field.
func (o *ResponsesShortIbcClient) SetChainId(v *os.File) {
	o.ChainId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesShortIbcClient) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesShortIbcClient) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesShortIbcClient) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResponsesShortIbcClient) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponsesShortIbcClient) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesShortIbcClient) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponsesShortIbcClient) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ResponsesShortIbcClient) SetType(v string) {
	o.Type = &v
}

func (o ResponsesShortIbcClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesShortIbcClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableResponsesShortIbcClient struct {
	value *ResponsesShortIbcClient
	isSet bool
}

func (v NullableResponsesShortIbcClient) Get() *ResponsesShortIbcClient {
	return v.value
}

func (v *NullableResponsesShortIbcClient) Set(val *ResponsesShortIbcClient) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesShortIbcClient) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesShortIbcClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesShortIbcClient(val *ResponsesShortIbcClient) *NullableResponsesShortIbcClient {
	return &NullableResponsesShortIbcClient{value: val, isSet: true}
}

func (v NullableResponsesShortIbcClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesShortIbcClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


