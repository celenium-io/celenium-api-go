/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesIbcChainStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesIbcChainStats{}

// ResponsesIbcChainStats struct for ResponsesIbcChainStats
type ResponsesIbcChainStats struct {
	Chain *string `json:"chain,omitempty"`
	Flow *string `json:"flow,omitempty"`
	Received *string `json:"received,omitempty"`
	Sent *string `json:"sent,omitempty"`
}

// NewResponsesIbcChainStats instantiates a new ResponsesIbcChainStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesIbcChainStats() *ResponsesIbcChainStats {
	this := ResponsesIbcChainStats{}
	return &this
}

// NewResponsesIbcChainStatsWithDefaults instantiates a new ResponsesIbcChainStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesIbcChainStatsWithDefaults() *ResponsesIbcChainStats {
	this := ResponsesIbcChainStats{}
	return &this
}

// GetChain returns the Chain field value if set, zero value otherwise.
func (o *ResponsesIbcChainStats) GetChain() string {
	if o == nil || IsNil(o.Chain) {
		var ret string
		return ret
	}
	return *o.Chain
}

// GetChainOk returns a tuple with the Chain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcChainStats) GetChainOk() (*string, bool) {
	if o == nil || IsNil(o.Chain) {
		return nil, false
	}
	return o.Chain, true
}

// HasChain returns a boolean if a field has been set.
func (o *ResponsesIbcChainStats) HasChain() bool {
	if o != nil && !IsNil(o.Chain) {
		return true
	}

	return false
}

// SetChain gets a reference to the given string and assigns it to the Chain field.
func (o *ResponsesIbcChainStats) SetChain(v string) {
	o.Chain = &v
}

// GetFlow returns the Flow field value if set, zero value otherwise.
func (o *ResponsesIbcChainStats) GetFlow() string {
	if o == nil || IsNil(o.Flow) {
		var ret string
		return ret
	}
	return *o.Flow
}

// GetFlowOk returns a tuple with the Flow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcChainStats) GetFlowOk() (*string, bool) {
	if o == nil || IsNil(o.Flow) {
		return nil, false
	}
	return o.Flow, true
}

// HasFlow returns a boolean if a field has been set.
func (o *ResponsesIbcChainStats) HasFlow() bool {
	if o != nil && !IsNil(o.Flow) {
		return true
	}

	return false
}

// SetFlow gets a reference to the given string and assigns it to the Flow field.
func (o *ResponsesIbcChainStats) SetFlow(v string) {
	o.Flow = &v
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *ResponsesIbcChainStats) GetReceived() string {
	if o == nil || IsNil(o.Received) {
		var ret string
		return ret
	}
	return *o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcChainStats) GetReceivedOk() (*string, bool) {
	if o == nil || IsNil(o.Received) {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *ResponsesIbcChainStats) HasReceived() bool {
	if o != nil && !IsNil(o.Received) {
		return true
	}

	return false
}

// SetReceived gets a reference to the given string and assigns it to the Received field.
func (o *ResponsesIbcChainStats) SetReceived(v string) {
	o.Received = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *ResponsesIbcChainStats) GetSent() string {
	if o == nil || IsNil(o.Sent) {
		var ret string
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcChainStats) GetSentOk() (*string, bool) {
	if o == nil || IsNil(o.Sent) {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *ResponsesIbcChainStats) HasSent() bool {
	if o != nil && !IsNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given string and assigns it to the Sent field.
func (o *ResponsesIbcChainStats) SetSent(v string) {
	o.Sent = &v
}

func (o ResponsesIbcChainStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesIbcChainStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Chain) {
		toSerialize["chain"] = o.Chain
	}
	if !IsNil(o.Flow) {
		toSerialize["flow"] = o.Flow
	}
	if !IsNil(o.Received) {
		toSerialize["received"] = o.Received
	}
	if !IsNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	return toSerialize, nil
}

type NullableResponsesIbcChainStats struct {
	value *ResponsesIbcChainStats
	isSet bool
}

func (v NullableResponsesIbcChainStats) Get() *ResponsesIbcChainStats {
	return v.value
}

func (v *NullableResponsesIbcChainStats) Set(val *ResponsesIbcChainStats) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesIbcChainStats) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesIbcChainStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesIbcChainStats(val *ResponsesIbcChainStats) *NullableResponsesIbcChainStats {
	return &NullableResponsesIbcChainStats{value: val, isSet: true}
}

func (v NullableResponsesIbcChainStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesIbcChainStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


