/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"os"
	"time"
)

// checks if the ResponsesHyperlaneMailbox type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesHyperlaneMailbox{}

// ResponsesHyperlaneMailbox struct for ResponsesHyperlaneMailbox
type ResponsesHyperlaneMailbox struct {
	DefaultHook **os.File `json:"default_hook,omitempty"`
	DefaultIsm **os.File `json:"default_ism,omitempty"`
	Domain *int64 `json:"domain,omitempty"`
	Height *int64 `json:"height,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Mailbox **os.File `json:"mailbox,omitempty"`
	Owner *ResponsesShortAddress `json:"owner,omitempty"`
	ReceivedMessages *int64 `json:"received_messages,omitempty"`
	RequiredHook **os.File `json:"required_hook,omitempty"`
	SentMessages *int64 `json:"sent_messages,omitempty"`
	Time *time.Time `json:"time,omitempty"`
	TxHash **os.File `json:"tx_hash,omitempty"`
}

// NewResponsesHyperlaneMailbox instantiates a new ResponsesHyperlaneMailbox object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesHyperlaneMailbox() *ResponsesHyperlaneMailbox {
	this := ResponsesHyperlaneMailbox{}
	return &this
}

// NewResponsesHyperlaneMailboxWithDefaults instantiates a new ResponsesHyperlaneMailbox object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesHyperlaneMailboxWithDefaults() *ResponsesHyperlaneMailbox {
	this := ResponsesHyperlaneMailbox{}
	return &this
}

// GetDefaultHook returns the DefaultHook field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetDefaultHook() *os.File {
	if o == nil || IsNil(o.DefaultHook) {
		var ret *os.File
		return ret
	}
	return *o.DefaultHook
}

// GetDefaultHookOk returns a tuple with the DefaultHook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetDefaultHookOk() (**os.File, bool) {
	if o == nil || IsNil(o.DefaultHook) {
		return nil, false
	}
	return o.DefaultHook, true
}

// HasDefaultHook returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasDefaultHook() bool {
	if o != nil && !IsNil(o.DefaultHook) {
		return true
	}

	return false
}

// SetDefaultHook gets a reference to the given *os.File and assigns it to the DefaultHook field.
func (o *ResponsesHyperlaneMailbox) SetDefaultHook(v *os.File) {
	o.DefaultHook = &v
}

// GetDefaultIsm returns the DefaultIsm field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetDefaultIsm() *os.File {
	if o == nil || IsNil(o.DefaultIsm) {
		var ret *os.File
		return ret
	}
	return *o.DefaultIsm
}

// GetDefaultIsmOk returns a tuple with the DefaultIsm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetDefaultIsmOk() (**os.File, bool) {
	if o == nil || IsNil(o.DefaultIsm) {
		return nil, false
	}
	return o.DefaultIsm, true
}

// HasDefaultIsm returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasDefaultIsm() bool {
	if o != nil && !IsNil(o.DefaultIsm) {
		return true
	}

	return false
}

// SetDefaultIsm gets a reference to the given *os.File and assigns it to the DefaultIsm field.
func (o *ResponsesHyperlaneMailbox) SetDefaultIsm(v *os.File) {
	o.DefaultIsm = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetDomain() int64 {
	if o == nil || IsNil(o.Domain) {
		var ret int64
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetDomainOk() (*int64, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given int64 and assigns it to the Domain field.
func (o *ResponsesHyperlaneMailbox) SetDomain(v int64) {
	o.Domain = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetHeight() int64 {
	if o == nil || IsNil(o.Height) {
		var ret int64
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetHeightOk() (*int64, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int64 and assigns it to the Height field.
func (o *ResponsesHyperlaneMailbox) SetHeight(v int64) {
	o.Height = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ResponsesHyperlaneMailbox) SetId(v int64) {
	o.Id = &v
}

// GetMailbox returns the Mailbox field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetMailbox() *os.File {
	if o == nil || IsNil(o.Mailbox) {
		var ret *os.File
		return ret
	}
	return *o.Mailbox
}

// GetMailboxOk returns a tuple with the Mailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetMailboxOk() (**os.File, bool) {
	if o == nil || IsNil(o.Mailbox) {
		return nil, false
	}
	return o.Mailbox, true
}

// HasMailbox returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasMailbox() bool {
	if o != nil && !IsNil(o.Mailbox) {
		return true
	}

	return false
}

// SetMailbox gets a reference to the given *os.File and assigns it to the Mailbox field.
func (o *ResponsesHyperlaneMailbox) SetMailbox(v *os.File) {
	o.Mailbox = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetOwner() ResponsesShortAddress {
	if o == nil || IsNil(o.Owner) {
		var ret ResponsesShortAddress
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetOwnerOk() (*ResponsesShortAddress, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given ResponsesShortAddress and assigns it to the Owner field.
func (o *ResponsesHyperlaneMailbox) SetOwner(v ResponsesShortAddress) {
	o.Owner = &v
}

// GetReceivedMessages returns the ReceivedMessages field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetReceivedMessages() int64 {
	if o == nil || IsNil(o.ReceivedMessages) {
		var ret int64
		return ret
	}
	return *o.ReceivedMessages
}

// GetReceivedMessagesOk returns a tuple with the ReceivedMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetReceivedMessagesOk() (*int64, bool) {
	if o == nil || IsNil(o.ReceivedMessages) {
		return nil, false
	}
	return o.ReceivedMessages, true
}

// HasReceivedMessages returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasReceivedMessages() bool {
	if o != nil && !IsNil(o.ReceivedMessages) {
		return true
	}

	return false
}

// SetReceivedMessages gets a reference to the given int64 and assigns it to the ReceivedMessages field.
func (o *ResponsesHyperlaneMailbox) SetReceivedMessages(v int64) {
	o.ReceivedMessages = &v
}

// GetRequiredHook returns the RequiredHook field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetRequiredHook() *os.File {
	if o == nil || IsNil(o.RequiredHook) {
		var ret *os.File
		return ret
	}
	return *o.RequiredHook
}

// GetRequiredHookOk returns a tuple with the RequiredHook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetRequiredHookOk() (**os.File, bool) {
	if o == nil || IsNil(o.RequiredHook) {
		return nil, false
	}
	return o.RequiredHook, true
}

// HasRequiredHook returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasRequiredHook() bool {
	if o != nil && !IsNil(o.RequiredHook) {
		return true
	}

	return false
}

// SetRequiredHook gets a reference to the given *os.File and assigns it to the RequiredHook field.
func (o *ResponsesHyperlaneMailbox) SetRequiredHook(v *os.File) {
	o.RequiredHook = &v
}

// GetSentMessages returns the SentMessages field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetSentMessages() int64 {
	if o == nil || IsNil(o.SentMessages) {
		var ret int64
		return ret
	}
	return *o.SentMessages
}

// GetSentMessagesOk returns a tuple with the SentMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetSentMessagesOk() (*int64, bool) {
	if o == nil || IsNil(o.SentMessages) {
		return nil, false
	}
	return o.SentMessages, true
}

// HasSentMessages returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasSentMessages() bool {
	if o != nil && !IsNil(o.SentMessages) {
		return true
	}

	return false
}

// SetSentMessages gets a reference to the given int64 and assigns it to the SentMessages field.
func (o *ResponsesHyperlaneMailbox) SetSentMessages(v int64) {
	o.SentMessages = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *ResponsesHyperlaneMailbox) SetTime(v time.Time) {
	o.Time = &v
}

// GetTxHash returns the TxHash field value if set, zero value otherwise.
func (o *ResponsesHyperlaneMailbox) GetTxHash() *os.File {
	if o == nil || IsNil(o.TxHash) {
		var ret *os.File
		return ret
	}
	return *o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHyperlaneMailbox) GetTxHashOk() (**os.File, bool) {
	if o == nil || IsNil(o.TxHash) {
		return nil, false
	}
	return o.TxHash, true
}

// HasTxHash returns a boolean if a field has been set.
func (o *ResponsesHyperlaneMailbox) HasTxHash() bool {
	if o != nil && !IsNil(o.TxHash) {
		return true
	}

	return false
}

// SetTxHash gets a reference to the given *os.File and assigns it to the TxHash field.
func (o *ResponsesHyperlaneMailbox) SetTxHash(v *os.File) {
	o.TxHash = &v
}

func (o ResponsesHyperlaneMailbox) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesHyperlaneMailbox) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultHook) {
		toSerialize["default_hook"] = o.DefaultHook
	}
	if !IsNil(o.DefaultIsm) {
		toSerialize["default_ism"] = o.DefaultIsm
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Mailbox) {
		toSerialize["mailbox"] = o.Mailbox
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.ReceivedMessages) {
		toSerialize["received_messages"] = o.ReceivedMessages
	}
	if !IsNil(o.RequiredHook) {
		toSerialize["required_hook"] = o.RequiredHook
	}
	if !IsNil(o.SentMessages) {
		toSerialize["sent_messages"] = o.SentMessages
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.TxHash) {
		toSerialize["tx_hash"] = o.TxHash
	}
	return toSerialize, nil
}

type NullableResponsesHyperlaneMailbox struct {
	value *ResponsesHyperlaneMailbox
	isSet bool
}

func (v NullableResponsesHyperlaneMailbox) Get() *ResponsesHyperlaneMailbox {
	return v.value
}

func (v *NullableResponsesHyperlaneMailbox) Set(val *ResponsesHyperlaneMailbox) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesHyperlaneMailbox) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesHyperlaneMailbox) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesHyperlaneMailbox(val *ResponsesHyperlaneMailbox) *NullableResponsesHyperlaneMailbox {
	return &NullableResponsesHyperlaneMailbox{value: val, isSet: true}
}

func (v NullableResponsesHyperlaneMailbox) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesHyperlaneMailbox) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


