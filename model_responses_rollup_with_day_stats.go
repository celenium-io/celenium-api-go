/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesRollupWithDayStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesRollupWithDayStats{}

// ResponsesRollupWithDayStats struct for ResponsesRollupWithDayStats
type ResponsesRollupWithDayStats struct {
	AvgSize *int32 `json:"avg_size,omitempty"`
	BlobsCount *int32 `json:"blobs_count,omitempty"`
	BlobsPerPfb *float32 `json:"blobs_per_pfb,omitempty"`
	Bridge *string `json:"bridge,omitempty"`
	Category *string `json:"category,omitempty"`
	Compression *string `json:"compression,omitempty"`
	DefiLama *string `json:"defi_lama,omitempty"`
	Description *string `json:"description,omitempty"`
	Explorer *string `json:"explorer,omitempty"`
	FeePerPfb *string `json:"fee_per_pfb,omitempty"`
	Github *string `json:"github,omitempty"`
	Id *int32 `json:"id,omitempty"`
	L2Beat *string `json:"l2_beat,omitempty"`
	Logo *string `json:"logo,omitempty"`
	MbPrice *string `json:"mb_price,omitempty"`
	Name *string `json:"name,omitempty"`
	NamespaceCount *int32 `json:"namespace_count,omitempty"`
	PfbCount *int32 `json:"pfb_count,omitempty"`
	Provider *string `json:"provider,omitempty"`
	Slug *string `json:"slug,omitempty"`
	Stack *string `json:"stack,omitempty"`
	Throughput *int32 `json:"throughput,omitempty"`
	TotalFee *string `json:"total_fee,omitempty"`
	TotalSize *int32 `json:"total_size,omitempty"`
	Twitter *string `json:"twitter,omitempty"`
	Type *string `json:"type,omitempty"`
	Vm *string `json:"vm,omitempty"`
	Website *string `json:"website,omitempty"`
}

// NewResponsesRollupWithDayStats instantiates a new ResponsesRollupWithDayStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesRollupWithDayStats() *ResponsesRollupWithDayStats {
	this := ResponsesRollupWithDayStats{}
	return &this
}

// NewResponsesRollupWithDayStatsWithDefaults instantiates a new ResponsesRollupWithDayStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesRollupWithDayStatsWithDefaults() *ResponsesRollupWithDayStats {
	this := ResponsesRollupWithDayStats{}
	return &this
}

// GetAvgSize returns the AvgSize field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetAvgSize() int32 {
	if o == nil || IsNil(o.AvgSize) {
		var ret int32
		return ret
	}
	return *o.AvgSize
}

// GetAvgSizeOk returns a tuple with the AvgSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetAvgSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.AvgSize) {
		return nil, false
	}
	return o.AvgSize, true
}

// HasAvgSize returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasAvgSize() bool {
	if o != nil && !IsNil(o.AvgSize) {
		return true
	}

	return false
}

// SetAvgSize gets a reference to the given int32 and assigns it to the AvgSize field.
func (o *ResponsesRollupWithDayStats) SetAvgSize(v int32) {
	o.AvgSize = &v
}

// GetBlobsCount returns the BlobsCount field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetBlobsCount() int32 {
	if o == nil || IsNil(o.BlobsCount) {
		var ret int32
		return ret
	}
	return *o.BlobsCount
}

// GetBlobsCountOk returns a tuple with the BlobsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetBlobsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.BlobsCount) {
		return nil, false
	}
	return o.BlobsCount, true
}

// HasBlobsCount returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasBlobsCount() bool {
	if o != nil && !IsNil(o.BlobsCount) {
		return true
	}

	return false
}

// SetBlobsCount gets a reference to the given int32 and assigns it to the BlobsCount field.
func (o *ResponsesRollupWithDayStats) SetBlobsCount(v int32) {
	o.BlobsCount = &v
}

// GetBlobsPerPfb returns the BlobsPerPfb field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetBlobsPerPfb() float32 {
	if o == nil || IsNil(o.BlobsPerPfb) {
		var ret float32
		return ret
	}
	return *o.BlobsPerPfb
}

// GetBlobsPerPfbOk returns a tuple with the BlobsPerPfb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetBlobsPerPfbOk() (*float32, bool) {
	if o == nil || IsNil(o.BlobsPerPfb) {
		return nil, false
	}
	return o.BlobsPerPfb, true
}

// HasBlobsPerPfb returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasBlobsPerPfb() bool {
	if o != nil && !IsNil(o.BlobsPerPfb) {
		return true
	}

	return false
}

// SetBlobsPerPfb gets a reference to the given float32 and assigns it to the BlobsPerPfb field.
func (o *ResponsesRollupWithDayStats) SetBlobsPerPfb(v float32) {
	o.BlobsPerPfb = &v
}

// GetBridge returns the Bridge field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetBridge() string {
	if o == nil || IsNil(o.Bridge) {
		var ret string
		return ret
	}
	return *o.Bridge
}

// GetBridgeOk returns a tuple with the Bridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetBridgeOk() (*string, bool) {
	if o == nil || IsNil(o.Bridge) {
		return nil, false
	}
	return o.Bridge, true
}

// HasBridge returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasBridge() bool {
	if o != nil && !IsNil(o.Bridge) {
		return true
	}

	return false
}

// SetBridge gets a reference to the given string and assigns it to the Bridge field.
func (o *ResponsesRollupWithDayStats) SetBridge(v string) {
	o.Bridge = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ResponsesRollupWithDayStats) SetCategory(v string) {
	o.Category = &v
}

// GetCompression returns the Compression field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetCompression() string {
	if o == nil || IsNil(o.Compression) {
		var ret string
		return ret
	}
	return *o.Compression
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetCompressionOk() (*string, bool) {
	if o == nil || IsNil(o.Compression) {
		return nil, false
	}
	return o.Compression, true
}

// HasCompression returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasCompression() bool {
	if o != nil && !IsNil(o.Compression) {
		return true
	}

	return false
}

// SetCompression gets a reference to the given string and assigns it to the Compression field.
func (o *ResponsesRollupWithDayStats) SetCompression(v string) {
	o.Compression = &v
}

// GetDefiLama returns the DefiLama field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetDefiLama() string {
	if o == nil || IsNil(o.DefiLama) {
		var ret string
		return ret
	}
	return *o.DefiLama
}

// GetDefiLamaOk returns a tuple with the DefiLama field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetDefiLamaOk() (*string, bool) {
	if o == nil || IsNil(o.DefiLama) {
		return nil, false
	}
	return o.DefiLama, true
}

// HasDefiLama returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasDefiLama() bool {
	if o != nil && !IsNil(o.DefiLama) {
		return true
	}

	return false
}

// SetDefiLama gets a reference to the given string and assigns it to the DefiLama field.
func (o *ResponsesRollupWithDayStats) SetDefiLama(v string) {
	o.DefiLama = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResponsesRollupWithDayStats) SetDescription(v string) {
	o.Description = &v
}

// GetExplorer returns the Explorer field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetExplorer() string {
	if o == nil || IsNil(o.Explorer) {
		var ret string
		return ret
	}
	return *o.Explorer
}

// GetExplorerOk returns a tuple with the Explorer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetExplorerOk() (*string, bool) {
	if o == nil || IsNil(o.Explorer) {
		return nil, false
	}
	return o.Explorer, true
}

// HasExplorer returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasExplorer() bool {
	if o != nil && !IsNil(o.Explorer) {
		return true
	}

	return false
}

// SetExplorer gets a reference to the given string and assigns it to the Explorer field.
func (o *ResponsesRollupWithDayStats) SetExplorer(v string) {
	o.Explorer = &v
}

// GetFeePerPfb returns the FeePerPfb field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetFeePerPfb() string {
	if o == nil || IsNil(o.FeePerPfb) {
		var ret string
		return ret
	}
	return *o.FeePerPfb
}

// GetFeePerPfbOk returns a tuple with the FeePerPfb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetFeePerPfbOk() (*string, bool) {
	if o == nil || IsNil(o.FeePerPfb) {
		return nil, false
	}
	return o.FeePerPfb, true
}

// HasFeePerPfb returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasFeePerPfb() bool {
	if o != nil && !IsNil(o.FeePerPfb) {
		return true
	}

	return false
}

// SetFeePerPfb gets a reference to the given string and assigns it to the FeePerPfb field.
func (o *ResponsesRollupWithDayStats) SetFeePerPfb(v string) {
	o.FeePerPfb = &v
}

// GetGithub returns the Github field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetGithub() string {
	if o == nil || IsNil(o.Github) {
		var ret string
		return ret
	}
	return *o.Github
}

// GetGithubOk returns a tuple with the Github field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetGithubOk() (*string, bool) {
	if o == nil || IsNil(o.Github) {
		return nil, false
	}
	return o.Github, true
}

// HasGithub returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasGithub() bool {
	if o != nil && !IsNil(o.Github) {
		return true
	}

	return false
}

// SetGithub gets a reference to the given string and assigns it to the Github field.
func (o *ResponsesRollupWithDayStats) SetGithub(v string) {
	o.Github = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ResponsesRollupWithDayStats) SetId(v int32) {
	o.Id = &v
}

// GetL2Beat returns the L2Beat field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetL2Beat() string {
	if o == nil || IsNil(o.L2Beat) {
		var ret string
		return ret
	}
	return *o.L2Beat
}

// GetL2BeatOk returns a tuple with the L2Beat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetL2BeatOk() (*string, bool) {
	if o == nil || IsNil(o.L2Beat) {
		return nil, false
	}
	return o.L2Beat, true
}

// HasL2Beat returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasL2Beat() bool {
	if o != nil && !IsNil(o.L2Beat) {
		return true
	}

	return false
}

// SetL2Beat gets a reference to the given string and assigns it to the L2Beat field.
func (o *ResponsesRollupWithDayStats) SetL2Beat(v string) {
	o.L2Beat = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *ResponsesRollupWithDayStats) SetLogo(v string) {
	o.Logo = &v
}

// GetMbPrice returns the MbPrice field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetMbPrice() string {
	if o == nil || IsNil(o.MbPrice) {
		var ret string
		return ret
	}
	return *o.MbPrice
}

// GetMbPriceOk returns a tuple with the MbPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetMbPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MbPrice) {
		return nil, false
	}
	return o.MbPrice, true
}

// HasMbPrice returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasMbPrice() bool {
	if o != nil && !IsNil(o.MbPrice) {
		return true
	}

	return false
}

// SetMbPrice gets a reference to the given string and assigns it to the MbPrice field.
func (o *ResponsesRollupWithDayStats) SetMbPrice(v string) {
	o.MbPrice = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResponsesRollupWithDayStats) SetName(v string) {
	o.Name = &v
}

// GetNamespaceCount returns the NamespaceCount field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetNamespaceCount() int32 {
	if o == nil || IsNil(o.NamespaceCount) {
		var ret int32
		return ret
	}
	return *o.NamespaceCount
}

// GetNamespaceCountOk returns a tuple with the NamespaceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetNamespaceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NamespaceCount) {
		return nil, false
	}
	return o.NamespaceCount, true
}

// HasNamespaceCount returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasNamespaceCount() bool {
	if o != nil && !IsNil(o.NamespaceCount) {
		return true
	}

	return false
}

// SetNamespaceCount gets a reference to the given int32 and assigns it to the NamespaceCount field.
func (o *ResponsesRollupWithDayStats) SetNamespaceCount(v int32) {
	o.NamespaceCount = &v
}

// GetPfbCount returns the PfbCount field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetPfbCount() int32 {
	if o == nil || IsNil(o.PfbCount) {
		var ret int32
		return ret
	}
	return *o.PfbCount
}

// GetPfbCountOk returns a tuple with the PfbCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetPfbCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PfbCount) {
		return nil, false
	}
	return o.PfbCount, true
}

// HasPfbCount returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasPfbCount() bool {
	if o != nil && !IsNil(o.PfbCount) {
		return true
	}

	return false
}

// SetPfbCount gets a reference to the given int32 and assigns it to the PfbCount field.
func (o *ResponsesRollupWithDayStats) SetPfbCount(v int32) {
	o.PfbCount = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ResponsesRollupWithDayStats) SetProvider(v string) {
	o.Provider = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *ResponsesRollupWithDayStats) SetSlug(v string) {
	o.Slug = &v
}

// GetStack returns the Stack field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetStack() string {
	if o == nil || IsNil(o.Stack) {
		var ret string
		return ret
	}
	return *o.Stack
}

// GetStackOk returns a tuple with the Stack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetStackOk() (*string, bool) {
	if o == nil || IsNil(o.Stack) {
		return nil, false
	}
	return o.Stack, true
}

// HasStack returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasStack() bool {
	if o != nil && !IsNil(o.Stack) {
		return true
	}

	return false
}

// SetStack gets a reference to the given string and assigns it to the Stack field.
func (o *ResponsesRollupWithDayStats) SetStack(v string) {
	o.Stack = &v
}

// GetThroughput returns the Throughput field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetThroughput() int32 {
	if o == nil || IsNil(o.Throughput) {
		var ret int32
		return ret
	}
	return *o.Throughput
}

// GetThroughputOk returns a tuple with the Throughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetThroughputOk() (*int32, bool) {
	if o == nil || IsNil(o.Throughput) {
		return nil, false
	}
	return o.Throughput, true
}

// HasThroughput returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasThroughput() bool {
	if o != nil && !IsNil(o.Throughput) {
		return true
	}

	return false
}

// SetThroughput gets a reference to the given int32 and assigns it to the Throughput field.
func (o *ResponsesRollupWithDayStats) SetThroughput(v int32) {
	o.Throughput = &v
}

// GetTotalFee returns the TotalFee field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetTotalFee() string {
	if o == nil || IsNil(o.TotalFee) {
		var ret string
		return ret
	}
	return *o.TotalFee
}

// GetTotalFeeOk returns a tuple with the TotalFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetTotalFeeOk() (*string, bool) {
	if o == nil || IsNil(o.TotalFee) {
		return nil, false
	}
	return o.TotalFee, true
}

// HasTotalFee returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasTotalFee() bool {
	if o != nil && !IsNil(o.TotalFee) {
		return true
	}

	return false
}

// SetTotalFee gets a reference to the given string and assigns it to the TotalFee field.
func (o *ResponsesRollupWithDayStats) SetTotalFee(v string) {
	o.TotalFee = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetTotalSize() int32 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetTotalSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int32 and assigns it to the TotalSize field.
func (o *ResponsesRollupWithDayStats) SetTotalSize(v int32) {
	o.TotalSize = &v
}

// GetTwitter returns the Twitter field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetTwitter() string {
	if o == nil || IsNil(o.Twitter) {
		var ret string
		return ret
	}
	return *o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetTwitterOk() (*string, bool) {
	if o == nil || IsNil(o.Twitter) {
		return nil, false
	}
	return o.Twitter, true
}

// HasTwitter returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasTwitter() bool {
	if o != nil && !IsNil(o.Twitter) {
		return true
	}

	return false
}

// SetTwitter gets a reference to the given string and assigns it to the Twitter field.
func (o *ResponsesRollupWithDayStats) SetTwitter(v string) {
	o.Twitter = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ResponsesRollupWithDayStats) SetType(v string) {
	o.Type = &v
}

// GetVm returns the Vm field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetVm() string {
	if o == nil || IsNil(o.Vm) {
		var ret string
		return ret
	}
	return *o.Vm
}

// GetVmOk returns a tuple with the Vm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetVmOk() (*string, bool) {
	if o == nil || IsNil(o.Vm) {
		return nil, false
	}
	return o.Vm, true
}

// HasVm returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasVm() bool {
	if o != nil && !IsNil(o.Vm) {
		return true
	}

	return false
}

// SetVm gets a reference to the given string and assigns it to the Vm field.
func (o *ResponsesRollupWithDayStats) SetVm(v string) {
	o.Vm = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *ResponsesRollupWithDayStats) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesRollupWithDayStats) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *ResponsesRollupWithDayStats) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *ResponsesRollupWithDayStats) SetWebsite(v string) {
	o.Website = &v
}

func (o ResponsesRollupWithDayStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesRollupWithDayStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvgSize) {
		toSerialize["avg_size"] = o.AvgSize
	}
	if !IsNil(o.BlobsCount) {
		toSerialize["blobs_count"] = o.BlobsCount
	}
	if !IsNil(o.BlobsPerPfb) {
		toSerialize["blobs_per_pfb"] = o.BlobsPerPfb
	}
	if !IsNil(o.Bridge) {
		toSerialize["bridge"] = o.Bridge
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Compression) {
		toSerialize["compression"] = o.Compression
	}
	if !IsNil(o.DefiLama) {
		toSerialize["defi_lama"] = o.DefiLama
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Explorer) {
		toSerialize["explorer"] = o.Explorer
	}
	if !IsNil(o.FeePerPfb) {
		toSerialize["fee_per_pfb"] = o.FeePerPfb
	}
	if !IsNil(o.Github) {
		toSerialize["github"] = o.Github
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.L2Beat) {
		toSerialize["l2_beat"] = o.L2Beat
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.MbPrice) {
		toSerialize["mb_price"] = o.MbPrice
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NamespaceCount) {
		toSerialize["namespace_count"] = o.NamespaceCount
	}
	if !IsNil(o.PfbCount) {
		toSerialize["pfb_count"] = o.PfbCount
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Stack) {
		toSerialize["stack"] = o.Stack
	}
	if !IsNil(o.Throughput) {
		toSerialize["throughput"] = o.Throughput
	}
	if !IsNil(o.TotalFee) {
		toSerialize["total_fee"] = o.TotalFee
	}
	if !IsNil(o.TotalSize) {
		toSerialize["total_size"] = o.TotalSize
	}
	if !IsNil(o.Twitter) {
		toSerialize["twitter"] = o.Twitter
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Vm) {
		toSerialize["vm"] = o.Vm
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

type NullableResponsesRollupWithDayStats struct {
	value *ResponsesRollupWithDayStats
	isSet bool
}

func (v NullableResponsesRollupWithDayStats) Get() *ResponsesRollupWithDayStats {
	return v.value
}

func (v *NullableResponsesRollupWithDayStats) Set(val *ResponsesRollupWithDayStats) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesRollupWithDayStats) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesRollupWithDayStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesRollupWithDayStats(val *ResponsesRollupWithDayStats) *NullableResponsesRollupWithDayStats {
	return &NullableResponsesRollupWithDayStats{value: val, isSet: true}
}

func (v NullableResponsesRollupWithDayStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesRollupWithDayStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


