/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
)

// checks if the ResponsesHlDomainStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesHlDomainStats{}

// ResponsesHlDomainStats struct for ResponsesHlDomainStats
type ResponsesHlDomainStats struct {
	Amount *string `json:"amount,omitempty"`
	ChainMetadata *ResponsesChainMetadata `json:"chain_metadata,omitempty"`
	DomainId *int32 `json:"domain_id,omitempty"`
	TransfersCount *int32 `json:"transfers_count,omitempty"`
}

// NewResponsesHlDomainStats instantiates a new ResponsesHlDomainStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesHlDomainStats() *ResponsesHlDomainStats {
	this := ResponsesHlDomainStats{}
	return &this
}

// NewResponsesHlDomainStatsWithDefaults instantiates a new ResponsesHlDomainStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesHlDomainStatsWithDefaults() *ResponsesHlDomainStats {
	this := ResponsesHlDomainStats{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ResponsesHlDomainStats) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHlDomainStats) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ResponsesHlDomainStats) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *ResponsesHlDomainStats) SetAmount(v string) {
	o.Amount = &v
}

// GetChainMetadata returns the ChainMetadata field value if set, zero value otherwise.
func (o *ResponsesHlDomainStats) GetChainMetadata() ResponsesChainMetadata {
	if o == nil || IsNil(o.ChainMetadata) {
		var ret ResponsesChainMetadata
		return ret
	}
	return *o.ChainMetadata
}

// GetChainMetadataOk returns a tuple with the ChainMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHlDomainStats) GetChainMetadataOk() (*ResponsesChainMetadata, bool) {
	if o == nil || IsNil(o.ChainMetadata) {
		return nil, false
	}
	return o.ChainMetadata, true
}

// HasChainMetadata returns a boolean if a field has been set.
func (o *ResponsesHlDomainStats) HasChainMetadata() bool {
	if o != nil && !IsNil(o.ChainMetadata) {
		return true
	}

	return false
}

// SetChainMetadata gets a reference to the given ResponsesChainMetadata and assigns it to the ChainMetadata field.
func (o *ResponsesHlDomainStats) SetChainMetadata(v ResponsesChainMetadata) {
	o.ChainMetadata = &v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *ResponsesHlDomainStats) GetDomainId() int32 {
	if o == nil || IsNil(o.DomainId) {
		var ret int32
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHlDomainStats) GetDomainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DomainId) {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *ResponsesHlDomainStats) HasDomainId() bool {
	if o != nil && !IsNil(o.DomainId) {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given int32 and assigns it to the DomainId field.
func (o *ResponsesHlDomainStats) SetDomainId(v int32) {
	o.DomainId = &v
}

// GetTransfersCount returns the TransfersCount field value if set, zero value otherwise.
func (o *ResponsesHlDomainStats) GetTransfersCount() int32 {
	if o == nil || IsNil(o.TransfersCount) {
		var ret int32
		return ret
	}
	return *o.TransfersCount
}

// GetTransfersCountOk returns a tuple with the TransfersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesHlDomainStats) GetTransfersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TransfersCount) {
		return nil, false
	}
	return o.TransfersCount, true
}

// HasTransfersCount returns a boolean if a field has been set.
func (o *ResponsesHlDomainStats) HasTransfersCount() bool {
	if o != nil && !IsNil(o.TransfersCount) {
		return true
	}

	return false
}

// SetTransfersCount gets a reference to the given int32 and assigns it to the TransfersCount field.
func (o *ResponsesHlDomainStats) SetTransfersCount(v int32) {
	o.TransfersCount = &v
}

func (o ResponsesHlDomainStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesHlDomainStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ChainMetadata) {
		toSerialize["chain_metadata"] = o.ChainMetadata
	}
	if !IsNil(o.DomainId) {
		toSerialize["domain_id"] = o.DomainId
	}
	if !IsNil(o.TransfersCount) {
		toSerialize["transfers_count"] = o.TransfersCount
	}
	return toSerialize, nil
}

type NullableResponsesHlDomainStats struct {
	value *ResponsesHlDomainStats
	isSet bool
}

func (v NullableResponsesHlDomainStats) Get() *ResponsesHlDomainStats {
	return v.value
}

func (v *NullableResponsesHlDomainStats) Set(val *ResponsesHlDomainStats) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesHlDomainStats) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesHlDomainStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesHlDomainStats(val *ResponsesHlDomainStats) *NullableResponsesHlDomainStats {
	return &NullableResponsesHlDomainStats{value: val, isSet: true}
}

func (v NullableResponsesHlDomainStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesHlDomainStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


