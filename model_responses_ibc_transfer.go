/*
Celenium API

Celenium API is a powerful tool to access all blockchain data that is processed and indexed by our proprietary indexer. With Celenium API you can retrieve all historical data, off-chain data, blobs and statistics through our REST API. Celenium API indexer are open source, which allows you to not depend on third-party services. You can clone, build and run them independently, giving you full control over all components. If you have any questions or feature requests, please feel free to contact us. We appreciate your feedback!

API version: 1.0
Contact: celenium@pklabs.me
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package celenium

import (
	"encoding/json"
	"os"
	"time"
)

// checks if the ResponsesIbcTransfer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesIbcTransfer{}

// ResponsesIbcTransfer struct for ResponsesIbcTransfer
type ResponsesIbcTransfer struct {
	Amount *string `json:"amount,omitempty"`
	ChainId **os.File `json:"chain_id,omitempty"`
	ChannelId *string `json:"channel_id,omitempty"`
	ConnectionId *string `json:"connection_id,omitempty"`
	Denom *string `json:"denom,omitempty"`
	Height *int32 `json:"height,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Memo *string `json:"memo,omitempty"`
	Port *string `json:"port,omitempty"`
	Receiver *ResponsesShortAddress `json:"receiver,omitempty"`
	Sender *ResponsesShortAddress `json:"sender,omitempty"`
	Sequence *int32 `json:"sequence,omitempty"`
	Time *time.Time `json:"time,omitempty"`
	Timeout *time.Time `json:"timeout,omitempty"`
	TimeoutHeight *int32 `json:"timeout_height,omitempty"`
	TxHash **os.File `json:"tx_hash,omitempty"`
}

// NewResponsesIbcTransfer instantiates a new ResponsesIbcTransfer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesIbcTransfer() *ResponsesIbcTransfer {
	this := ResponsesIbcTransfer{}
	return &this
}

// NewResponsesIbcTransferWithDefaults instantiates a new ResponsesIbcTransfer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesIbcTransferWithDefaults() *ResponsesIbcTransfer {
	this := ResponsesIbcTransfer{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *ResponsesIbcTransfer) SetAmount(v string) {
	o.Amount = &v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetChainId() *os.File {
	if o == nil || IsNil(o.ChainId) {
		var ret *os.File
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetChainIdOk() (**os.File, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given *os.File and assigns it to the ChainId field.
func (o *ResponsesIbcTransfer) SetChainId(v *os.File) {
	o.ChainId = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetChannelId() string {
	if o == nil || IsNil(o.ChannelId) {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetChannelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *ResponsesIbcTransfer) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *ResponsesIbcTransfer) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetDenom returns the Denom field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetDenom() string {
	if o == nil || IsNil(o.Denom) {
		var ret string
		return ret
	}
	return *o.Denom
}

// GetDenomOk returns a tuple with the Denom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetDenomOk() (*string, bool) {
	if o == nil || IsNil(o.Denom) {
		return nil, false
	}
	return o.Denom, true
}

// HasDenom returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasDenom() bool {
	if o != nil && !IsNil(o.Denom) {
		return true
	}

	return false
}

// SetDenom gets a reference to the given string and assigns it to the Denom field.
func (o *ResponsesIbcTransfer) SetDenom(v string) {
	o.Denom = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ResponsesIbcTransfer) SetHeight(v int32) {
	o.Height = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ResponsesIbcTransfer) SetId(v int32) {
	o.Id = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *ResponsesIbcTransfer) SetMemo(v string) {
	o.Memo = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *ResponsesIbcTransfer) SetPort(v string) {
	o.Port = &v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetReceiver() ResponsesShortAddress {
	if o == nil || IsNil(o.Receiver) {
		var ret ResponsesShortAddress
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetReceiverOk() (*ResponsesShortAddress, bool) {
	if o == nil || IsNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasReceiver() bool {
	if o != nil && !IsNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given ResponsesShortAddress and assigns it to the Receiver field.
func (o *ResponsesIbcTransfer) SetReceiver(v ResponsesShortAddress) {
	o.Receiver = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetSender() ResponsesShortAddress {
	if o == nil || IsNil(o.Sender) {
		var ret ResponsesShortAddress
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetSenderOk() (*ResponsesShortAddress, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given ResponsesShortAddress and assigns it to the Sender field.
func (o *ResponsesIbcTransfer) SetSender(v ResponsesShortAddress) {
	o.Sender = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *ResponsesIbcTransfer) SetSequence(v int32) {
	o.Sequence = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *ResponsesIbcTransfer) SetTime(v time.Time) {
	o.Time = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetTimeout() time.Time {
	if o == nil || IsNil(o.Timeout) {
		var ret time.Time
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetTimeoutOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given time.Time and assigns it to the Timeout field.
func (o *ResponsesIbcTransfer) SetTimeout(v time.Time) {
	o.Timeout = &v
}

// GetTimeoutHeight returns the TimeoutHeight field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetTimeoutHeight() int32 {
	if o == nil || IsNil(o.TimeoutHeight) {
		var ret int32
		return ret
	}
	return *o.TimeoutHeight
}

// GetTimeoutHeightOk returns a tuple with the TimeoutHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetTimeoutHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutHeight) {
		return nil, false
	}
	return o.TimeoutHeight, true
}

// HasTimeoutHeight returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasTimeoutHeight() bool {
	if o != nil && !IsNil(o.TimeoutHeight) {
		return true
	}

	return false
}

// SetTimeoutHeight gets a reference to the given int32 and assigns it to the TimeoutHeight field.
func (o *ResponsesIbcTransfer) SetTimeoutHeight(v int32) {
	o.TimeoutHeight = &v
}

// GetTxHash returns the TxHash field value if set, zero value otherwise.
func (o *ResponsesIbcTransfer) GetTxHash() *os.File {
	if o == nil || IsNil(o.TxHash) {
		var ret *os.File
		return ret
	}
	return *o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesIbcTransfer) GetTxHashOk() (**os.File, bool) {
	if o == nil || IsNil(o.TxHash) {
		return nil, false
	}
	return o.TxHash, true
}

// HasTxHash returns a boolean if a field has been set.
func (o *ResponsesIbcTransfer) HasTxHash() bool {
	if o != nil && !IsNil(o.TxHash) {
		return true
	}

	return false
}

// SetTxHash gets a reference to the given *os.File and assigns it to the TxHash field.
func (o *ResponsesIbcTransfer) SetTxHash(v *os.File) {
	o.TxHash = &v
}

func (o ResponsesIbcTransfer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesIbcTransfer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	if !IsNil(o.ChannelId) {
		toSerialize["channel_id"] = o.ChannelId
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.Denom) {
		toSerialize["denom"] = o.Denom
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.TimeoutHeight) {
		toSerialize["timeout_height"] = o.TimeoutHeight
	}
	if !IsNil(o.TxHash) {
		toSerialize["tx_hash"] = o.TxHash
	}
	return toSerialize, nil
}

type NullableResponsesIbcTransfer struct {
	value *ResponsesIbcTransfer
	isSet bool
}

func (v NullableResponsesIbcTransfer) Get() *ResponsesIbcTransfer {
	return v.value
}

func (v *NullableResponsesIbcTransfer) Set(val *ResponsesIbcTransfer) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesIbcTransfer) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesIbcTransfer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesIbcTransfer(val *ResponsesIbcTransfer) *NullableResponsesIbcTransfer {
	return &NullableResponsesIbcTransfer{value: val, isSet: true}
}

func (v NullableResponsesIbcTransfer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesIbcTransfer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


